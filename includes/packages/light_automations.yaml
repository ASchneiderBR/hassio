automation:

#Casa

  - alias: Luzes da casa - SuÃ­te
    trigger:
      platform: state
      entity_id: binary_sensor.movimento_suite
      to: 'on'
    condition:
      condition: state
      entity_id: light.todos_os_leds_suite
      state: 'off'
    action:
      - service: light.turn_on
        entity_id: light.todos_os_leds_suite
        data:
          brightness_pct: 100
      - delay: '00:00:03'
      - wait_template: "{{ ((is_state('light.todos_os_leds_suite' , 'off')) or ((((as_timestamp(strptime(states.sensor.date__time.state, '%Y-%m-%d, %H:%M')) - as_timestamp(states.binary_sensor.movimento_suite.last_updated) ) / 60) | int) >= states.input_number.timmer_suite.state | int -1 and is_state('binary_sensor.movimento_suite' , 'off'))) }}" 
      - condition: state
        entity_id: light.todos_os_leds_suite
        state: 'on'
      - service: light.turn_off
        entity_id: light.todos_os_leds_suite

  - alias: Luzes da casa - Banheiro SuÃ­te
    trigger:
      platform: state
      entity_id: binary_sensor.movimento_banheiro_suite
      to: 'on'
    condition:
      condition: state
      entity_id: light.tudo_banheiro_suite
      state: 'off'
    action:
      - service: light.turn_on
        data_template:
          entity_id: >
              {%- if is_state('input_boolean.boa_noite' , 'off') -%}
                light.tudo_banheiro_suite
              {%- else -%}
                light.suite_banheiro_espelho
              {%- endif %}
      - delay: '00:00:03'
      - wait_template: "{{ ((is_state('light.tudo_banheiro_suite' , 'off')) or ((((as_timestamp(strptime(states.sensor.date__time.state, '%Y-%m-%d, %H:%M')) - as_timestamp(states.binary_sensor.movimento_banheiro_suite.last_updated) ) / 60) | int) >= states.input_number.timmer_banheiro_suite.state | int -1 and is_state('binary_sensor.movimento_banheiro_suite' , 'off')) and (((as_timestamp(strptime(states.sensor.date__time.state, '%Y-%m-%d, %H:%M')) - as_timestamp(states.switch.chuveirosuite.last_updated) ) / 60) | int) >= 3 and is_state('switch.chuveirosuite' , 'off')) }}"
      - condition: state
        entity_id: light.tudo_banheiro_suite
        state: 'on'
      - service: light.turn_off
        entity_id: light.tudo_banheiro_suite

  - alias: Luzes da casa - Banheiro Social
    trigger:
      platform: state
      entity_id: binary_sensor.movimento_banheiro_social
      to: 'on'
    condition:
      condition: state
      entity_id: light.tudo_banheiro_social
      state: 'off'
    action:
      - service: light.turn_on
        data_template:
          entity_id: >
              {%- if is_state('input_boolean.boa_noite' , 'off') -%}
                light.tudo_banheiro_social
              {%- else -%}
                light.banheiro_social_espelho
              {%- endif %}
      - delay: '00:00:03'
      - wait_template: "{{ ((is_state('light.tudo_banheiro_social' , 'off')) or ((((as_timestamp(strptime(states.sensor.date__time.state, '%Y-%m-%d, %H:%M')) - as_timestamp(states.binary_sensor.movimento_banheiro_social.last_updated) ) / 60) | int) >= states.input_number.timmer_banheiro_social.state | int -1 and is_state('binary_sensor.movimento_banheiro_social' , 'off')) and (((as_timestamp(strptime(states.sensor.date__time.state, '%Y-%m-%d, %H:%M')) - as_timestamp(states.switch.chuveirosocial.last_updated) ) / 60) | int) >= 3 and is_state('switch.chuveirosocial' , 'off')) }}"
      - condition: state
        entity_id: light.tudo_banheiro_social
        state: 'on'
      - service: light.turn_off
        entity_id: light.tudo_banheiro_social

  - alias: Luzes da casa - Quarto
    trigger:
      platform: state
      entity_id: binary_sensor.movimento_quarto
      to: 'on'
    condition:
      condition: state
      entity_id: light.luzes_principais_quarto
      state: 'off'
    action:
      - service: light.turn_on
        entity_id: light.luzes_principais_quarto
        data:
          brightness_pct: 100
      - delay: '00:00:03'
      - wait_template: "{{ ((is_state('light.luzes_principais_quarto' , 'off')) or ((((as_timestamp(strptime(states.sensor.date__time.state, '%Y-%m-%d, %H:%M')) - as_timestamp(states.binary_sensor.movimento_quarto.last_updated) ) / 60) | int) >= states.input_number.timmer_quarto.state | int -1 and is_state('binary_sensor.movimento_quarto' , 'off'))) }}"
      - condition: state
        entity_id: light.luzes_principais_quarto
        state: 'on'
      - service: light.turn_off
        entity_id: light.luzes_principais_quarto

  - alias: Luzes da casa - Sala
    trigger:
      platform: state
      entity_id: binary_sensor.movimento_sala
      to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: light.luzes_principais_sala
          state: 'off'
        - condition: state
          entity_id: light.mesa_jantar
          state: 'off'
    action:
      - service: light.turn_on
        entity_id: light.luzes_principais_sala
      - delay: '00:00:03'
      - wait_template: "{{ ((is_state('light.luzes_principais_sala' , 'off')) or ((((as_timestamp(strptime(states.sensor.date__time.state, '%Y-%m-%d, %H:%M')) - as_timestamp(states.binary_sensor.movimento_sala.last_updated) ) / 60) | int) >= states.input_number.timmer_sala.state | int -1 and is_state('binary_sensor.movimento_sala' , 'off'))) }}"
      - condition: state
        entity_id: light.luzes_principais_sala
        state: 'on'
      - service: light.turn_off
        entity_id: light.luzes_principais_sala

  - alias: Luzes da casa - Cozinha
    trigger:
      platform: state
      entity_id: binary_sensor.movimento_cozinha
      from: 'off'
      to: 'on'
    condition:
      condition: state
      entity_id: light.luzes_principais_cozinha
      state: 'off'
    action:
      - service: light.turn_on
        entity_id: light.luzes_principais_cozinha
      - delay: '00:00:03'
      - wait_template: "{{ ((is_state('light.luzes_principais_cozinha' , 'off')) or ((((as_timestamp(strptime(states.sensor.date__time.state, '%Y-%m-%d, %H:%M')) - as_timestamp(states.binary_sensor.movimento_cozinha.last_updated) ) / 60) | int) >= states.input_number.timmer_cozinha.state | int -1 and is_state('binary_sensor.movimento_cozinha' , 'off'))) }}" 
      - condition: state
        entity_id: light.luzes_principais_cozinha
        state: 'on'
      - service: light.turn_off
        entity_id: light.luzes_principais_cozinha

# MuvRH

  - alias: MuvRH 203 - Luz da entrada
    initial_state: True
    trigger:
      platform: state
      entity_id: binary_sensor.motion_sensor_158d0001ad6b83
      to: 'on'
    condition:
      condition: state
      entity_id: light.muv203entrada
      state: 'off'
    action:
      - service: light.turn_on
        entity_id: light.muv203entrada
      - delay: '00:00:03'
      - wait_template: "{{ ((is_state('light.muv203entrada' , 'off')) or ((((as_timestamp(strptime(states.sensor.date__time.state, '%Y-%m-%d, %H:%M')) - as_timestamp(states.binary_sensor.motion_sensor_158d0001ad6b83.last_updated) ) / 60) | int) >= states.input_number.timmer_muvrh_203_entrada.state | int -1 and is_state('binary_sensor.motion_sensor_158d0001ad6b83' , 'off'))) }}"
      - condition: state
        entity_id: light.muv203entrada
        state: 'on'
      - service: light.turn_off
        entity_id: light.muv203entrada

  - alias: MuvRH 203 - Luz do banheiro
    trigger:
      platform: state
      entity_id: binary_sensor.motion_sensor_158d0001e43ef1
      to: 'on'
    condition:
      condition: state
      entity_id: light.muv203banheiro
      state: 'off'
    action:
      - service: light.turn_on
        entity_id: light.muv203banheiro
      - delay: '00:00:03'
      - wait_template: "{{ ((is_state('light.muv203banheiro' , 'off')) or ((((as_timestamp(strptime(states.sensor.date__time.state, '%Y-%m-%d, %H:%M')) - as_timestamp(states.binary_sensor.motion_sensor_158d0001e43ef1.last_updated) ) / 60) | int) >= states.input_number.timmer_muvrh_203_banheiro.state | int -1 and is_state('binary_sensor.motion_sensor_158d0001e43ef1' , 'off'))) }}"
      - condition: state
        entity_id: light.muv203banheiro
        state: 'on'
      - service: light.turn_off
        entity_id: light.muv203banheiro

  - alias: MuvRH 203 - Luz da sala de operaÃ§Ãµes
    trigger:
      platform: state
      entity_id: binary_sensor.motion_sensor_158d0001e420d0
      to: 'on'
    condition:
      condition: state
      entity_id: light.muv203operacoes
      state: 'off'
    action:
      - service: light.turn_on
        entity_id: light.muv203operacoes
      - delay: '00:00:03'
      - wait_template: "{{ ((is_state('light.muv203operacoes' , 'off')) or ((((as_timestamp(strptime(states.sensor.date__time.state, '%Y-%m-%d, %H:%M')) - as_timestamp(states.binary_sensor.motion_sensor_158d0001e420d0.last_updated) ) / 60) | int) >= states.input_number.timmer_muvrh_203_salaoperacoes.state | int -1 and is_state('binary_sensor.motion_sensor_158d0001e420d0' , 'off'))) }}"
      - condition: state
        entity_id: light.muv203operacoes
        state: 'on'
      - service: light.turn_off
        entity_id: light.muv203operacoes

  - alias: MuvRH 203 - Luz da nossa sala
    trigger:
      platform: state
      entity_id: binary_sensor.motion_sensor_158d0001e02f9a
      to: 'on'
    condition:
      condition: state
      entity_id: light.muv203nossasala
      state: 'off'
    action:
      - service: light.turn_on
        entity_id: light.muv203nossasala
      - delay: '00:00:03'
      - wait_template: "{{ ((is_state('light.muv203nossasala' , 'off')) or ((((as_timestamp(strptime(states.sensor.date__time.state, '%Y-%m-%d, %H:%M')) - as_timestamp(states.binary_sensor.motion_sensor_158d0001e02f9a.last_updated) ) / 60) | int) >= states.input_number.timmer_muvrh_203_nossasala.state | int -1 and is_state('binary_sensor.motion_sensor_158d0001e02f9a' , 'off'))) }}"
      - condition: state
        entity_id: light.muv203nossasala
        state: 'on'
      - service: light.turn_off
        entity_id: light.muv203nossasala

  - alias: MuvRH 303 - Luz da entrada
    trigger:
      platform: state
      entity_id: binary_sensor.motion_sensor_158d0001e44035
      to: 'on'
    condition:
      condition: state
      entity_id: light.muv303entrada
      state: 'off'
    action:
      - service: light.turn_on
        entity_id: light.muv303entrada
      - delay: '00:00:03'
      - wait_template: "{{ ((is_state('light.muv303entrada' , 'off')) or ((((as_timestamp(strptime(states.sensor.date__time.state, '%Y-%m-%d, %H:%M')) - as_timestamp(states.binary_sensor.motion_sensor_158d0001e44035.last_updated) ) / 60) | int) >= states.input_number.timmer_muvrh_303_entrada.state | int -1 and is_state('binary_sensor.motion_sensor_158d0001e44035' , 'off'))) }}"
      - condition: state
        entity_id: light.muv303entrada
        state: 'on'
      - service: light.turn_off
        entity_id: light.muv303entrada

  - alias: MuvRH 303 - Luz da dinÃ¢mica
    trigger:
      platform: state
      entity_id: binary_sensor.motion_sensor_158d0001a24bdc
      to: 'on'
    condition:
      condition: state
      entity_id: light.muv303dinamica
      state: 'off'
    action:
      - service: light.turn_on
        entity_id: light.muv303dinamica
      - delay: '00:00:03'
      - wait_template: "{{ ((is_state('light.muv303dinamica' , 'off')) or ((((as_timestamp(strptime(states.sensor.date__time.state, '%Y-%m-%d, %H:%M')) - as_timestamp(states.binary_sensor.motion_sensor_158d0001a24bdc.last_updated) ) / 60) | int) >= states.input_number.timmer_muvrh_303_dinamica.state | int -1 and is_state('binary_sensor.motion_sensor_158d0001a24bdc' , 'off'))) }}"
      - condition: state
        entity_id: light.muv303dinamica
        state: 'on'
      - service: light.turn_off
        entity_id: light.muv303dinamica

  - alias: MuvRH 303 - Luz do banheiro
    trigger:
      platform: state
      entity_id: binary_sensor.motion_sensor_158d0001ad6c20
      to: 'on'
    condition:
      condition: state
      entity_id: light.muv303banheiro
      state: 'off'
    action:
      - service: light.turn_on
        entity_id: light.muv303banheiro
      - delay: '00:00:03'
      - wait_template: "{{ ((is_state('light.muv303banheiro' , 'off')) or ((((as_timestamp(strptime(states.sensor.date__time.state, '%Y-%m-%d, %H:%M')) - as_timestamp(states.binary_sensor.motion_sensor_158d0001ad6c20.last_updated) ) / 60) | int) >= states.input_number.timmer_muvrh_303_banheiro.state | int -1 and is_state('binary_sensor.motion_sensor_158d0001ad6c20' , 'off'))) }}"
      - condition: state
        entity_id: light.muv303banheiro
        state: 'on'
      - service: light.turn_off
        entity_id: light.muv303banheiro

#Temporizadores

input_number:

#Casa

  timmer_cozinha:
    name: Cozinha
    initial: 5
    min: 1
    max: 10
    step: 1
    unit_of_measurement: "Minutos"
    icon: mdi:timer

  timmer_sala:
    name: Sala
    initial: 3
    min: 1
    max: 10
    step: 1
    unit_of_measurement: "Minutos"
    icon: mdi:timer

  timmer_quarto:
    name: Quarto
    initial: 3
    min: 1
    max: 10
    step: 1
    unit_of_measurement: "Minutos"
    icon: mdi:timer

  timmer_banheiro_social:
    name: Banheiro social
    initial: 2
    min: 1
    max: 10
    step: 1
    unit_of_measurement: "Minutos"
    icon: mdi:timer

  timmer_banheiro_suite:
    name: Banheiro da suÃ­te
    initial: 2
    min: 1
    max: 10
    step: 1
    unit_of_measurement: "Minutos"
    icon: mdi:timer

  timmer_suite:
    name: SuÃ­te
    initial: 3
    min: 1
    max: 10
    step: 1
    unit_of_measurement: "Minutos"
    icon: mdi:timer

#MuvRH

  timmer_muvrh_203_entrada:
    name: 203 - Entrada
    initial: 10
    min: 1
    max: 20
    step: 1
    unit_of_measurement: "Minutos"
    icon: mdi:timer

  timmer_muvrh_203_banheiro:
    name: 203 - Banheiro
    initial: 2
    min: 1
    max: 20
    step: 1
    unit_of_measurement: "Minutos"
    icon: mdi:timer

  timmer_muvrh_203_salaoperacoes:
    name: 203 - OperaÃ§Ãµes
    initial: 10
    min: 1
    max: 20
    step: 1
    unit_of_measurement: "Minutos"
    icon: mdi:timer

  timmer_muvrh_203_nossasala:
    name: 203 - Nossa sala
    initial: 10
    min: 1
    max: 20
    step: 1
    unit_of_measurement: "Minutos"
    icon: mdi:timer

  timmer_muvrh_303_entrada:
    name: 303 - Entrada
    initial: 15
    min: 1
    max: 20
    step: 1
    unit_of_measurement: "Minutos"
    icon: mdi:timer

  timmer_muvrh_303_dinamica:
    name: 303 - DinÃ¢mica
    initial: 15
    min: 1
    max: 20
    step: 1
    unit_of_measurement: "Minutos"
    icon: mdi:timer

  timmer_muvrh_303_banheiro:
    name: 303 - Banheiro
    initial: 2
    min: 1
    max: 20
    step: 1
    unit_of_measurement: "Minutos"
    icon: mdi:timer
