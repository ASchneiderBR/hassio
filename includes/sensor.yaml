- platform: wunderground
  api_key: !secret wunderground_api_key
  monitored_conditions:
    - weather_1h
  lang: BR

- platform: darksky
  api_key: !secret darksky_api_key
  language: pt
  forecast:
    - 0
    - 1
  update_interval: '00:30'
  monitored_conditions:
    - summary
    - temperature
    - temperature_low
    - temperature_high
    - humidity
    - precip_probability
    - daily_summary
    - minutely_summary
    - cloud_cover

- platform: uptime
  name: Dias funcionando
  unit_of_measurement: days

- platform: broadlink
  update_interval: 300
  name: MuvRH
  host: 192.168.1.35
  mac: '34:EA:34:E4:5F:2F'
  monitored_conditions:
    - temperature

- platform: fastdotcom
  hour:
    - 1
    - 6
    - 13
    - 20

- platform: systemmonitor
  resources:
    - type: processor_use
    - type: disk_use_percent
      arg: /home
    - type: memory_use_percent

- platform: command_line
  name: CPU Temperature
  command: 'cat /sys/class/thermal/thermal_zone0/temp'
  unit_of_measurement: '°C'
  value_template: '{{ value | multiply(0.001) | round (1) }}'

- platform: template
  sensors:
    temperatura_real_nossa_sala:
      friendly_name: 'Temperatura real da nossa sala'
      unit_of_measurement: '°C'
      value_template: "{{ (states.sensor.muvrh_temperature.state  | float) - 2 }}"

#    ha_uptime:
#      friendly_name: Tempo desde reiniciado
#      value_template: >
#        {% if states('sensor.uptime') == '0.0' %} 
#          Acabou de reiniciar
#        {% else %}
#          {% macro phrase(value, name) %}
#          {%- set value = value | int %}
#          {%- set end = 's' if value > 1 else '' %}
#          {{- '{} {}{}'.format(value, name, end) if value | int > 0 else '' }}
#          {%- endmacro %}
#          
#          {% set weeks = (states('sensor.uptime') | int / 7) | int %}
#          {% set days = (states('sensor.uptime') | int) - (weeks * 7) %}
#          {% set hours = (states('sensor.uptime') | float - states('sensor.uptime') | int) * 24 %}
#          {% set minutes = (hours - hours | int) * 60 %}
#          {{ [ phrase(weeks, 'semana'), phrase(days, 'dias'), phrase(hours, 'horas'), phrase(minutes, 'minutos') ] | select('!=','') | list | join(', ') }}
#        {% endif %}

- platform: time_date
  display_options:
    - 'time'
    - 'date'
    - 'date_time'
    - 'time_date'
    - 'time_utc'

- platform: "mqtt"
  name: "Planta casa"
  state_topic: "tele/planta-casa/SENSOR"
  availability_topic: "tele/planta-casa/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
  unit_of_measurement: "%"
  device_class: humidity
  value_template: '{{ ((value_json["ANALOG"]["A0"] |float /10) |int -100) *-1 }}'
  qos: 1

- platform: "mqtt"
  name: "Temperatura lava louças"
  state_topic: "tele/lava_loucas_casa/SENSOR"
  availability_topic: "tele/lava_loucas_casa/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
  unit_of_measurement: "°C"
  device_class: temperature
  value_template: "{{ value_json.DHT11.Temperature }}"
  qos: 1

- platform: "mqtt"
  name: "Umidade lava louças"
  state_topic: "tele/lava_loucas_casa/SENSOR"
  availability_topic: "tele/lava_loucas_casa/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
  unit_of_measurement: "%"
  device_class: humidity
  value_template: "{{ value_json.DHT11.Humidity }}"
  qos: 1

#- platform: qbittorrent
#  name: "qBittorrent Servidor"
#  url: 'http://192.168.1.10:7894'
#  username: !secret qbtitorrent_user
#  password: !secret qbtitorrent_password